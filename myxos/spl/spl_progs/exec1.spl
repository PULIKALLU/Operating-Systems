S0=([PTBR+2*(SP/512)]*512)+(SP%512);
S10=[S0-1];
S1=[S0-3];

if(S10==9) then
 S3=0;
 
 while(S3<=63) do
  if([FAT+8*S3]==S1) then
   break;
  else
   S3=S3+1;
  endif;
 endwhile;
 if(S3>63) then
  [S0-2]=-1;
  ireturn;
 endif;

S9=[FAT+8*S3+2];
load(1,S9);

S6=1;
S5=PTBR;
 while(S6<=5) do
  
  if([S5+S6]=="01"||[S5+S6]=="11") then
   S13=[S5+S6-1];
   S14=[MEM_LIST+S13];
   S14=S14-1;
   [MEM_LIST+S13]=S14;
  endif;
  if([S5+S6]=="00"||[S5+S6]=="10"&&([S5+S6-1]>=448)) then
   S9=[S5+S6-1];
   S10=[DISK_LIST+S9];
   S10=S10-1;
   [DISK_LIST+S9]=S10;
   store(6,20);
   load(6,20);
  endif;
  S6=S6+2;
 endwhile;

S13=0;
while(S13<3) do
   
   [PTBR+S13*2]=[512+S13];
   [PTBR+S13*2+1]="00";
   S13=S13+1;
endwhile;
  
  
[PTBR+7]="01";
    
S12=(PTBR-1024)/8;
S6=READY_LIST+S12*32+15;
S7=0;
   while(S7<=14) do
     if([S6+S7]!=-1) then
       S8=[S6+S7];
       S9=FILE_TABLE+S8*2+1;
       [S9]=[S9]-1;
       if([S9]==0) then
        [S9-1]=-1;
       endif;
       [S6+S7]=-1;
       [S6+S7+1]=-1;
     endif;
    S7=S7+2;
   endwhile;

SP=3*512;

alias newphysicalSP S4;
newphysicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
[ newphysicalSP ] = 0;
ireturn;

endif;

if(S10==11) then
 S13=(PTBR-1024)/8;
 [S0-2]=S13;
 ireturn;
endif;

if(S10==12) then
 S13=(PTBR-1024)/8;
 S3=[READY_LIST+S13*32+31];
 [S0-2]=S3;
 ireturn;
endif;




